/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/matrix_transform.h>
#include <layouts/cuddlykeyboards/ferris.dtsi>

&cuddlykeyboards_ferris_layout {
	transform = <&default_transform>;
};

/ {
	chosen {
		zmk,physical-layout = &cuddlykeyboards_ferris_layout;
		zmk,kscan = &kscan0 ;
	};

	default_transform: keymap_transform_0 {
		compatible = "zmk,matrix-transform";
		columns = <10>;
		rows = <4>;
		// | SW1  | SW2  | SW3  | SW4  | SW5  |    | SW5  | SW4  | SW3  | SW2  | SW1  |
		// | SW6  | SW7  | SW8  | SW9  | SW10 |    | SW10 | SW9  | SW8  | SW7  | SW6  |
		// | SW11 | SW12 | SW13 | SW14 | SW15 |    | SW15 | SW14 | SW13 | SW12 | SW11 |
		//                      | SW16 | SW17 |    | SW17 | SW16 |
		map = <
		RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)  RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
		RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)  RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
		RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)  RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
		RC(3,2) RC(3,3) RC(3,4)  RC(3,7) RC(3,8)
		>;
	};

	kscan0: kscan {
		compatible = "zmk,kscan-gpio-matrix";
		wakeup-source;

		diode-direction = "row2col";
		row-gpios = <&gpio0 22 GPIO_ACTIVE_HIGH>,
		            <&gpio0 24 GPIO_ACTIVE_HIGH>,
		            <&gpio1 0 GPIO_ACTIVE_HIGH>,
		            <&gpio1 11 GPIO_ACTIVE_HIGH>;

		col-gpios = <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		            <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		            <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		            <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>,
		            <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>;
	};

	left_encoder: encoder_left {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <80>;
		status = "disabled";
	};

	right_encoder: encoder_right {
		compatible = "alps,ec11";
		a-gpios = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <80>;
		status = "disabled";
	};

	sensors: sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&left_encoder &right_encoder>;
		triggers-per-rotation = <20>;
	};

} ;

/ {
	glidepoint_listener: glidepoint_listener {
		compatible = "zmk,input-listener";
		status = "disabled";
	};
};
